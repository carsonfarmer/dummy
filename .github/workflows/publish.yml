name: Publish
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Version of this release"
        required: true
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2.3.1
        with:
          fetch-depth: 0

      - name: Cache üì¶
        uses: actions/cache@v1
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup Node Environment ‚¨¢
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - uses: actions/github-script@v6
        id: create-tag
        name: Create Signed Tag
        with:
          github-token: ${{secrets.TEXTILEIO_MACHINE_ACCESS_TOKEN}}
          script: |
            const tag = await github.request('POST /repos/{owner}/{repo}/git/tags', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: '${{ github.event.inputs.release_version }}',
              message: 'New release',
              object: context.sha,
              type: "commit"
            });
            await github.request('POST /repos/{owner}/{repo}/git/refs', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ github.event.inputs.release_version }}',
              sha: tag.data.sha
            })
      - name: Update version in package.json
        id: version-bump
        uses: jaywcjlove/github-action-package@v1.3.0
        with:
          version: ${{ github.event.inputs.release_version }}

      - name: Install üîß
        run: npm install

      - name: Conditional
        id: cond
        uses: haya14busa/action-cond@v1
        with:
          cond: ${{ contains(github.event.inputs.release_version, '-') }}
          if_true: "next"
          if_false: "latest"

      - name: Release
        if: steps.publish.outputs.type != 'none'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.publish.outputs.version }}
          generateReleaseNotes: true
          prerelease: ${{ contains(steps.publish.outputs.type, 'pre') }}
          token: ${{ secrets.GITHUB_TOKEN }}
